{"remainingRequest":"/Users/shoichi/Desktop/vueX-orm/vuex-orm-examples/node_modules/babel-loader/lib/index.js!/Users/shoichi/Desktop/vueX-orm/vuex-orm-examples/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/shoichi/Desktop/vueX-orm/vuex-orm-examples/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/shoichi/Desktop/vueX-orm/vuex-orm-examples/src/components/UsersList.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/shoichi/Desktop/vueX-orm/vuex-orm-examples/src/components/UsersList.vue","mtime":1561622324328},{"path":"/Users/shoichi/Desktop/vueX-orm/vuex-orm-examples/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/shoichi/Desktop/vueX-orm/vuex-orm-examples/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/shoichi/Desktop/vueX-orm/vuex-orm-examples/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/shoichi/Desktop/vueX-orm/vuex-orm-examples/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport Trash from \"./icons/Trash\";\nexport default {\n  components: {\n    Trash: Trash\n  },\n  computed: {\n    users: function users() {\n      return this.$store.getters['entities/users/query']().with('todos').orderBy('id', 'desc').get();\n    }\n  },\n  methods: {\n    update: function update(id, name) {\n      this.$store.dispatch('entities/users/update', {\n        id: id,\n        name: name\n      });\n    },\n    destroy: function destroy(id) {\n      this.$store.dispatch('entities/users/delete', id);\n    }\n  }\n};",{"version":3,"sources":["UsersList.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;AAoBA,OAAA,KAAA;AAEA,eAAA;AACA,EAAA,UAAA,EAAA;AACA,IAAA,KAAA,EAAA;AADA,GADA;AAKA,EAAA,QAAA,EAAA;AACA,IAAA,KADA,mBACA;AACA,aAAA,KAAA,MAAA,CAAA,OAAA,CAAA,sBAAA,IAAA,IAAA,CAAA,OAAA,EAAA,OAAA,CAAA,IAAA,EAAA,MAAA,EAAA,GAAA,EAAA;AACA;AAHA,GALA;AAWA,EAAA,OAAA,EAAA;AACA,IAAA,MADA,kBACA,EADA,EACA,IADA,EACA;AACA,WAAA,MAAA,CAAA,QAAA,CAAA,uBAAA,EAAA;AAAA,QAAA,EAAA,EAAA,EAAA;AAAA,QAAA,IAAA,EAAA;AAAA,OAAA;AACA,KAHA;AAKA,IAAA,OALA,mBAKA,EALA,EAKA;AACA,WAAA,MAAA,CAAA,QAAA,CAAA,uBAAA,EAAA,EAAA;AACA;AAPA;AAXA,CAAA","sourcesContent":["<template>\n  <div class=\"UsersList\">\n    <div class=\"user\" :key=\"user.id\" v-for=\"user in users\">\n      <input\n        class=\"input\"\n        :value=\"user.name\"\n        placeholder=\"Type in user's name!\"\n        @input=\"e => { update(user.id, e.target.value) }\"\n      >\n\n      <p class=\"tasks\">{{ user.todos.length }} Tasks</p>\n\n      <button class=\"icon\" @click=\"destroy(user.id)\">\n        <Trash class=\"trash\" />\n      </button>\n    </div>\n  </div>\n</template>\n\n<script>\nimport Trash from './icons/Trash'\n\nexport default {\n  components: {\n    Trash\n  },\n\n  computed: {\n    users () {\n      return this.$store.getters['entities/users/query']().with('todos').orderBy('id', 'desc').get()\n    }\n  },\n\n  methods: {\n    update (id, name) {\n      this.$store.dispatch('entities/users/update', { id, name })\n    },\n\n    destroy (id) {\n      this.$store.dispatch('entities/users/delete', id)\n    }\n  }\n}\n</script>\n\n<style scoped>\n@import \"styles/variables\";\n\n.user {\n  display: flex;\n  align-items: center;\n  border-top: 1px solid var(--c-divider);\n}\n\n.user:hover {\n  background-color: #fafafa;\n}\n\n.user:hover .trash {\n  opacity: 1;\n}\n\n.input {\n  flex-grow: 1;\n  border: 0;\n  padding: 12px 24px;\n  width: 100%;\n  background-color: transparent;\n  transition: all .3s;\n}\n\n.tasks {\n  font-size: 12px;\n  white-space: nowrap;\n  color: var(--c-gray);\n}\n\n.icon {\n  display: block;\n  padding: 12px 24px;\n}\n\n.icon:hover .trash {\n  fill: var(--c-black);\n}\n\n.trash {\n  width: 14px;\n  height: 14px;\n  opacity: 0;\n  transform: translateY(2px);\n  transition: all .3s;\n  fill: var(--c-gray);\n}\n</style>\n"],"sourceRoot":"src/components"}]}